# Generated by Django 2.0.4 on 2018-05-08 05:15

import common.models
import common.validators
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('institution', models.CharField(choices=[('Head', '总行'), ('Branch', '分行')], default='1', max_length=64, verbose_name='机构')),
                ('start_from', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('end_to', models.DateTimeField(default=datetime.date(2019, 5, 8), verbose_name='有效期限')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('user_id', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='请输入您的工号！', max_length=20, primary_key=True, serialize=False, validators=[common.validators.UnicodeUsernameValidator()], verbose_name='用户')),
                ('power_level', models.CharField(choices=[('SysAdmin', '系统管理员'), ('HeadAdmin', '总行管理员'), ('BranchAdmin', '分行管理员')], default='3', max_length=64, verbose_name='权限')),
                ('groups', models.ManyToManyField(blank=True, help_text='请为用户组分配权限！', related_name='account_adminuser_user_set', related_query_name='account_adminuser_user', to='auth.Group', verbose_name='用户组权限')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='请为用户分配权限！', related_name='account_adminuser_user_set', related_query_name='account_adminuser_user', to='auth.Permission', verbose_name='用户权限')),
            ],
            options={
                'verbose_name': '管理员用户表',
                'verbose_name_plural': '管理员用户表',
                'db_table': 'AdminUser',
            },
            managers=[
                ('objects', common.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminUserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.IntegerField(default=0, verbose_name='令牌')),
                ('name', models.CharField(default='', max_length=20, verbose_name='姓名')),
                ('photo', models.ImageField(upload_to='', verbose_name='头像')),
                ('organization', models.CharField(db_index=True, default='', max_length=254, verbose_name='单位')),
                ('tel', models.CharField(default='', max_length=254, verbose_name='电话')),
                ('email', models.EmailField(default='', max_length=254, verbose_name='邮箱')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '管理员用户信息表',
                'verbose_name_plural': '管理员用户信息表',
                'db_table': 'AdminUserProfile',
            },
        ),
        migrations.CreateModel(
            name='BranchUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='请输入您的工号！', max_length=20, primary_key=True, serialize=False, validators=[common.validators.UsernameValidator()], verbose_name='用户')),
                ('institution', models.CharField(choices=[('Head', '总行'), ('Branch', '分行')], default='1', max_length=64, verbose_name='机构')),
                ('start_from', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('end_to', models.DateTimeField(default=datetime.date(2019, 5, 8), verbose_name='有效期限')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('power_level', models.CharField(choices=[('BranchAssist', '分行协理员'), ('DeptManager', '部门管理员'), ('DeptOperator', '部门操作员'), ('Auditor', '审计检查员')], default='DeptOperator', max_length=64, verbose_name='权限')),
                ('groups', models.ManyToManyField(blank=True, help_text='请为用户组分配权限！', related_name='account_branchuser_user_set', related_query_name='account_branchuser_user', to='auth.Group', verbose_name='用户组权限')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='请为用户分配权限！', related_name='account_branchuser_user_set', related_query_name='account_branchuser_user', to='auth.Permission', verbose_name='用户权限')),
            ],
            options={
                'verbose_name': '分行用户表',
                'verbose_name_plural': '分行用户表',
                'db_table': 'BranchUser',
            },
            managers=[
                ('objects', common.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BranchUserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.IntegerField(default=0, verbose_name='令牌')),
                ('name', models.CharField(default='', max_length=20, verbose_name='姓名')),
                ('photo', models.ImageField(upload_to='', verbose_name='头像')),
                ('organization', models.CharField(db_index=True, default='', max_length=254, verbose_name='单位')),
                ('tel', models.CharField(default='', max_length=254, verbose_name='电话')),
                ('email', models.EmailField(default='', max_length=254, verbose_name='邮箱')),
                ('dept', models.CharField(default='', max_length=255, verbose_name='部门')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='account.BranchUser')),
            ],
            options={
                'verbose_name': '分行用户信息表',
                'verbose_name_plural': '分行用户信息表',
                'db_table': 'BranchUserProfile',
            },
        ),
        migrations.CreateModel(
            name='DeptInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.CharField(max_length=255)),
                ('dept', models.CharField(max_length=255)),
                ('organization_ch', models.CharField(max_length=255)),
                ('dept_ch', models.CharField(max_length=255)),
                ('mail', models.EmailField(blank=True, max_length=64, null=True)),
                ('ceo', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'TeamInfo',
            },
        ),
        migrations.CreateModel(
            name='HeadUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='请输入您的工号！', max_length=20, primary_key=True, serialize=False, validators=[common.validators.UsernameValidator()], verbose_name='用户')),
                ('institution', models.CharField(choices=[('Head', '总行'), ('Branch', '分行')], default='1', max_length=64, verbose_name='机构')),
                ('start_from', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('end_to', models.DateTimeField(default=datetime.date(2019, 5, 8), verbose_name='有效期限')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('power_level', models.CharField(choices=[('TeanManager', '团队管理员'), ('GuardJudge', '值班审核员'), ('ClaimsMan', '事件调查员'), ('GuardManager', '值班管理员'), ('Temporary', '临时操作员'), ('Auditor', '审计检查员')], default='HeadAdmin', max_length=64, verbose_name='权限')),
                ('groups', models.ManyToManyField(blank=True, help_text='请为用户组分配权限！', related_name='account_headuser_user_set', related_query_name='account_headuser_user', to='auth.Group', verbose_name='用户组权限')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='请为用户分配权限！', related_name='account_headuser_user_set', related_query_name='account_headuser_user', to='auth.Permission', verbose_name='用户权限')),
            ],
            options={
                'verbose_name': '总行用户表',
                'verbose_name_plural': '总行用户表',
                'db_table': 'HeadUser',
            },
            managers=[
                ('objects', common.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='HeadUserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.IntegerField(default=0, verbose_name='令牌')),
                ('name', models.CharField(default='', max_length=20, verbose_name='姓名')),
                ('photo', models.ImageField(upload_to='', verbose_name='头像')),
                ('organization', models.CharField(db_index=True, default='', max_length=254, verbose_name='单位')),
                ('tel', models.CharField(default='', max_length=254, verbose_name='电话')),
                ('email', models.EmailField(default='', max_length=254, verbose_name='邮箱')),
                ('dept', models.CharField(default='', max_length=255, verbose_name='团队')),
                ('re_user_id', models.CharField(default='', max_length=64, verbose_name='remedy账号')),
                ('re_password', models.CharField(default='', max_length=64, verbose_name='remedy密码')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='account.HeadUser')),
            ],
            options={
                'verbose_name': '总行用户信息表',
                'verbose_name_plural': '总行用户信息表',
                'db_table': 'HeadUserProfile',
            },
        ),
        migrations.AlterUniqueTogether(
            name='deptinfo',
            unique_together={('organization', 'dept')},
        ),
    ]
